stages:
  - build
  - test
  - jacoco
  - visualize

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  image: gradle:alpine
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  image: gradle:alpine
  script: gradle test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

jacoco:
  stage: jacoco
  image: gradle:alpine
  script: gradle jacocoTestReport
  needs: [ "test" ]
  dependencies:
    - test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

coverage:
  stage: visualize
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    - 'python /opt/cover2cover.py build/reports/jacoco/test/jacocoTestReport.xml src/main/kotlin > build/reports/coverage.xml'
    - 'python /opt/source2filename.py build/reports/coverage.xml'
  needs: [ "jacoco" ]
  dependencies:
    - jacoco
  artifacts:
    reports:
      cobertura: build/reports/coverage.xml
